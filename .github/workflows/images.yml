name: Dockerized

on:
  push:
    tags:
      - "*"
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        distro: [noble]
        tools: [default, node20, node22, min]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Map Distro Image
        id: distro
        run: |
          echo 'image=${{ matrix.distro == 'noble' && 'ubuntu:24.10' }}' >> "$GITHUB_OUTPUT"
      - name: Map Node Version
        id: node_version
        run: |
          node20=20.16.0
          node22=22.5.1
          version=${{ matrix.tools == 'node22' && '$node22' || '$node20' }}
          echo "node=$version" >> "$GITHUB_OUTPUT"
      - name: Map Ruby Version
        id: ruby_version
        run: |
          echo 'ruby=3.2.1' >> "$GITHUB_OUTPUT"
      - name: Docker Metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            muhrifqii/mendelevium-android-ci
          tags: |
            type=raw,value=latest,enable=${{ matrix.tools == 'default' && matrix.distro == 'noble' }}
            type=pep440,pattern={{version}},enable=${{ matrix.distro == 'noble' && matrix.tools == 'default'}}
            type=pep440,pattern={{major}},suffix=${{ matrix.tools == 'default' && '' || format('-{0}', matrix.tools) }}${{ format('-{0}', matrix.distro)}}
          flavor: latest=false
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          file: templates/${{ matrix.distro == 'noble' && 'debian' || 'debian' }}-${{ matrix.tools }}.Dockerfile
          build-args: |
            NODE_ARG=${{ steps.node_version.outputs.node }}
            RUBY_ARG=${{ steps.ruby_version.outputs.ruby }}
            BASE_IMAGE=${{ steps.distro.outputs.image }}
